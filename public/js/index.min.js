import{DynamicScript,theme,cookies,wallet,price,api,Tooltip,network as Network,recaptcha,fadeIn,infoMessageModal,startHeaderApiSearch,Toast}from"./utils.min.js";startHeaderApiSearch();const templateVar={};document.querySelectorAll(".template-var").forEach(e=>{templateVar[e.id]=e.value,e.remove()}),recaptcha.setKey(templateVar.recaptchakey),"false"===templateVar.production&&new DynamicScript("https://livejs.com/live.js");const session={get:async function(){if(this.isExpired()){const body={grc:await recaptcha.getToken()};this.id&&(body.currentSession=this.id);const data=await(await fetch("/session",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(body)})).json();return!data.error&&(this.id=data.sessionid,this.expireAt=data.expireAt,this.id)}return this.id},isExpired:function(){return!this.expireAt||(new Date).getTime()>this.expireAt}};new DynamicScript("https://kit.fontawesome.com/c1a16f97ec.js");const network=(symbol=>{let query;if([symbol,query]=symbol.split("?"),query=query?Object.fromEntries(query.split("&").map(e=>e.split("="))):{},""==symbol){const queryString=Object.keys(query).length?"?"+Object.entries(query).map(([k,v])=>`${k}=${v}`).join("&"):"";return void(window.location.href="/"+(cookies.get("network")||"eth")+queryString)}Network.set(symbol);const network=Network.get(),obj=document.querySelector("#network-btn");obj.classList.add(symbol),obj.querySelector(".name").innerHTML=network.name,obj.querySelector(".icon").src=`img/${symbol}.png`;let netName=network.longName||network.name;netName="s"==netName.slice(-1)?`${netName}'`:`${netName}'s`,document.querySelector("#info #network-name").innerHTML=netName,obj.addEventListener("click",(function(){const dropdown=document.createElement("div");dropdown.id="dropdown",dropdown.innerHTML=Object.entries(Network.getList()).filter(([k,v])=>k!=symbol&&!v.disabled).map(([k,v])=>`<div id="${k}" class="item"><a href="/${k}"><img class="icon" src="img/${k}.png" alt="${v.name} icon"><span class="name">${v.name}</span></a></div>`).join(""),dropdown.style.top=`${this.offsetTop+this.clientHeight}px`,dropdown.style.left=`${this.offsetLeft+this.clientWidth-130}px`;const fog=document.createElement("div");fog.id="fog",fog.classList.add("invisible"),document.body.appendChild(fog),fog.appendChild(dropdown),fog.addEventListener("click",()=>fog.remove())})),document.querySelector("#chain").innerHTML=network.name,price.token=network.token,price.update(),setInterval(()=>price.update(),6e4),document.querySelectorAll(".token-name").forEach(e=>e.innerHTML=network.token),document.querySelectorAll(".chain-symbol").forEach(e=>e.innerHTML=network.symbol),document.querySelectorAll(".chain-name").forEach(e=>e.innerHTML=network.name);const explorer=document.querySelector("footer .resources #explorer");explorer.href=network.explorer.href,explorer.querySelector("img").src=network.explorer.icon,explorer.querySelector(".name").innerHTML=network.explorer.name;const donateNetwork=network.nonevm?Network.get("bsc"):network;wallet.loadImg(document.querySelector("#donate"),donateNetwork),document.querySelectorAll(".donate-link").forEach(e=>wallet.bindModal(e,donateNetwork)),document.querySelector("#donate .token").innerHTML=donateNetwork.token,document.querySelector("#donate .chain").innerHTML=donateNetwork.name;const cookieName="hide-info-3";if(query.ref&&""===query.ref);else if(!cookies.get(cookieName)){const message=infoMessageModal.show("Owlracle extension can now automatically recommend gas prices into your Metamask tx confirmation window (free for a limited time). <a>Check it out!</a>");infoMessageModal.onClose=()=>cookies.set(cookieName,!0,{expires:{days:7},json:!0}),message.querySelector("a").addEventListener("click",()=>{window.open("/extension")})}const tabAliases={create:["newkey"],info:["keys"],recharge:[],alerts:[],history:[],logs:[]};return query.action&&(Object.keys(tabAliases).includes(query.action)||Object.values(tabAliases).flat().includes(query.action))&&(async()=>{let chosenTab;query.apikey&&await api.login(query.apikey),chosenTab=Object.keys(tabAliases).includes(query.action)?query.action:Object.entries(tabAliases).map(([k,v])=>!!v.includes(query.action)&&k).find(e=>e),api.showProfile(chosenTab)})(),network})(templateVar.network);theme.load(),document.querySelector("#theme").addEventListener("click",()=>theme.toggle());const chart={package:import("https://unpkg.com/lightweight-charts/dist/lightweight-charts.standalone.production.js"),ready:!1,timeframe:60,page:1,candles:200,lastCandle:((new Date).getTime()/1e3).toFixed(0),allRead:!1,network:network.symbol,mode:"gas",config:{area:{style:"area",color:"#2962ff"},candlestick:{style:"candlestick",colorUp:"#4CA69A",colorDown:"#E0544E"}},preferences:{gas:"area",token:"candlestick",fee:"area"},init:async function(){await this.package,document.querySelector("#chart").innerHTML="",this.obj=LightweightCharts.createChart(document.querySelector("#chart"),{width:Math.min(document.querySelector("#frame").offsetWidth-20,600),height:300,crosshair:{mode:LightweightCharts.CrosshairMode.Normal},timeScale:{timeVisible:!0,secondsVisible:!1}}),window.addEventListener("resize",()=>{this.obj.resize(Math.min(document.querySelector("#frame").offsetWidth-20,600),300)}),this.series={gas:{config:Object.assign({},this.config[this.preferences.gas])},token:{config:Object.assign({},this.config[this.preferences.token])},fee:{config:Object.assign({},this.config[this.preferences.fee])}},document.querySelectorAll("#chart-container #toggle-container button").forEach(e=>e.addEventListener("click",async()=>{e.classList.contains("active")||document.querySelectorAll("#chart-container #toggle-container button").forEach(a=>{const series=this.series[a.id];a==e?(a.classList.add("active"),series.visible=!0,this.mode=a.id,document.querySelectorAll("#chart-container #style-switcher button").forEach(e=>e.classList.remove("active")),document.querySelector(`#chart-container #style-${series.config.style}`).classList.add("active")):(a.classList.remove("active"),series.visible=!1),series.series&&series.series.applyOptions({visible:series.visible})})}));const container=document.querySelector("#chart"),toolTip=document.createElement("div");toolTip.id="tooltip-chart",container.appendChild(toolTip),this.obj.subscribeCrosshairMove(param=>{if(void 0===param.point||!param.time||param.point.x<0||param.point.x>container.clientWidth||param.point.y<0||param.point.y>container.clientHeight)toolTip.style.display="none";else{toolTip.style.display="block";const visibleSerie=Object.keys(this.series).filter(e=>this.series[e].visible)[0],price=param.seriesPrices.get(this.series[visibleSerie].series);if(price&&"number"!=typeof price){toolTip.innerHTML=Object.entries(price).map(([key,value])=>{const name=key.charAt(0).toUpperCase()+key.slice(1);return value.toString().split(".").length>=2&&value.toString().split(".")[1].length>4&&(value=(value=value.toString().split("."))[0]+"."+value[1].slice(0,4)),`<div class="${key}"><span class="name">${name}</span>: ${value}</div>`}).join("");const coordinateY=container.offsetTop+10,coordinateX=container.offsetLeft+10;toolTip.style.left=`${coordinateX}px`,toolTip.style.top=`${coordinateY}px`}else toolTip.style.display="none"}});const switcherButtons=document.querySelectorAll("#timeframe-switcher button");switcherButtons.forEach(b=>b.addEventListener("click",async()=>{if(this.queryHistory)return;switcherButtons.forEach(e=>e.classList.remove("active"));const text=b.innerHTML;b.innerHTML='<i class="fas fa-spin fa-cog"></i>',this.queryHistory=!0;const history=await this.getHistory(b.id.split("tf-")[1]);b.classList.add("active"),b.innerHTML=text,this.update(history),this.setCookie(),this.queryHistory=!1,document.querySelectorAll("#toggle-container button").forEach(b=>{const series=this.series[b.id];series.visible&&series.series.applyOptions({visible:series.visible})})})),this.timeScale=this.obj.timeScale(),this.timeScale.subscribeVisibleLogicalRangeChange(async()=>{const logicalRange=this.timeScale.getVisibleLogicalRange();if(null!==logicalRange&&logicalRange.from<0&&this.history.length>=this.candles&&!this.scrolling&&!this.allRead){this.scrolling=!0;const oldHistory=this.history,newHistory=await this.getHistory(this.timeframe,this.page+1);this.history=[...oldHistory,...newHistory],this.update(this.history),this.page++,this.scrolling=!1,0==newHistory.length&&(this.allRead=!0)}}),document.querySelectorAll("#chart-container #style-switcher button").forEach(e=>e.addEventListener("click",async()=>{if(e.classList.contains("active"))return;e.parentNode.querySelectorAll("button").forEach(e=>e.classList.toggle("active"));const text=e.innerHTML;e.innerHTML='<i class="fas fa-spin fa-cog"></i>';const serie=this.series[this.mode];serie.config=Object.assign({},this.config[e.id.split("style-")[1]]);const history=await this.getHistory(this.timeframe);this.obj.removeSeries(serie.series),serie.series=null,this.update(history),serie.series.applyOptions({visible:serie.visible}),e.innerHTML=text,this.setCookie()})),this.ready=!0},setCookie:function(){const cookieChart=Object.fromEntries(Object.entries(this.series).map(([k,v])=>[k,v.config.style]));cookieChart.timeframe=this.timeframe,cookies.set("chart",JSON.stringify(cookieChart),{expires:{days:365}})},update:function(data){if(data.length){const seriesName={gas:"gasPrice",token:"tokenPrice",fee:"txFee"};Object.entries(this.series).forEach(([key,value])=>{const speedData=data.map(e=>"candlestick"==value.config.style?{open:e[seriesName[key]].open,close:e[seriesName[key]].close,low:e[seriesName[key]].low,high:e[seriesName[key]].high,time:parseInt(new Date(e.timestamp).getTime()/1e3)}:{value:(e[seriesName[key]].close+e[seriesName[key]].open)/2,time:parseInt(new Date(e.timestamp).getTime()/1e3)}).reverse();value.series||("candlestick"==value.config.style?value.series=this.obj.addCandlestickSeries({upColor:value.config.colorUp,downColor:value.config.colorDown,borderDownColor:value.config.colorDown,borderUpColor:value.config.colorUp,wickDownColor:value.config.colorDOwn,wickUpColor:value.config.colorUp,visible:!1}):value.series=this.obj.addAreaSeries({lineColor:value.config.color,topColor:`${value.config.color}80`,bottomColor:`${value.config.color}10`,lineWidth:2,visible:!1})),value.series.setData(speedData)})}},setTheme:function(name){let background="#232323",text="#e3dcd0",lines="#3c3c3c";"light"==name&&(background="#eeeeee",text="#511814",lines="#c9c9c9"),this.isReady().then(()=>{this.obj.applyOptions({layout:{backgroundColor:background,textColor:text},grid:{vertLines:{color:lines},horzLines:{color:lines}},rightPriceScale:{borderColor:lines},timeScale:{borderColor:lines}})})},getHistory:async function(timeframe=60,page=1,candles=this.candles){this.timeframe=timeframe;const sessionid=await session.get(),token=await recaptcha.getToken();return this.history=await(await fetch(`/${this.network}/history?grc=${token}&sid=${sessionid}&timeframe=${timeframe}&page=${page}&candles=${candles}&to=${this.lastCandle}&tokenprice=true&txfee=true`)).json(),this.history.error?(console.log(this.history),401==this.history.error.status?this.getHistory(timeframe,page,candles):[]):this.history},isReady:async function(){return this.ready||new Promise(resolve=>setTimeout(()=>resolve(this.isReady()),10))}};if(cookies.get("chart")){let chartCookie=null;try{chartCookie=JSON.parse(cookies.get("chart"))}catch(error){console.log(error),cookies.delete("chart")}chartCookie.gas&&(chart.preferences.gas=chartCookie.gas),chartCookie.token&&(chart.preferences.token=chartCookie.token),chartCookie.fee&&(chart.preferences.fee=chartCookie.fee),chartCookie.timeframe&&(chart.timeframe=chartCookie.timeframe)}chart.init().then(()=>{theme.onChange=()=>{chart.setTheme(cookies.get("theme")||"dark")},theme.set(cookies.get("theme")||"dark")});const gasTimer={interval:1e4,toInterval:100,counter:100,cards:[{name:"🛴 Slow",tooltip:"Accepted on 35% of blocks",accept:35},{name:"🚗 Standard",tooltip:"Accepted on 60% of blocks",accept:60},{name:"✈️ Fast",tooltip:"Accepted on 90% of blocks",accept:90},{name:"🚀 Instant",tooltip:"Accepted on every block",accept:100}],init:function(interval,toInterval){this.interval=interval,this.toInterval=toInterval,this.counter=1,this.loadCookie(),this.buildCards(),this.countDown()},buildCards:function(){const container=document.querySelector("#gas-container");container.innerHTML="",this.cards.forEach(card=>{const dom=`<div class="gas">\n                <div class="title">\n                    <div class="left">${card.name} ${card.tooltip?'<i class="far fa-question-circle"></i>':""}</div>\n                    <div class="right" title="Change this card"><i class="fas fa-edit"></i></div>\n                </div>\n                <div class="timer"><div class="filled"></div></div>\n                <div class="body">\n                    <div class="gwei"><i class="fas fa-spin fa-cog"></i></div>\n                    <div class="usd"></div>\n                </div>\n            </div>`;container.insertAdjacentHTML("beforeend",dom)}),this.element=container.querySelectorAll(".timer .filled"),container.querySelectorAll(".gas i.fa-question-circle").forEach((e,i)=>new Tooltip(e,this.cards[i].tooltip)),container.querySelectorAll(".gas i.fa-edit").forEach((e,i)=>{new Tooltip(e.parentNode,null,{createEvent:"mouseenter",delay:1500}),e.parentNode.addEventListener("click",()=>{const fog=document.createElement("div");fog.id="fog",fog.innerHTML=`<div id='edit-cards' class="modal">\n                    <h2>Edit gas cards</h2>\n                    <h3>Replace the following query parameters</h3>\n                    <div class="input-container"><span class="title">Blocks</span><input id="blocks" class="input-text" value="${this.blocks||""}"></div>\n                    <div class="input-container"><span class="title">Percentile</span><input id="percentile" class="input-text" value="${this.percentile||""}"></div>\n                    <div class="input-container"><span class="title">Accept</span><input id="accept" class="input-text" value="${this.cards.map(e=>e.accept).join(",")}"></div>\n                    <div class="input-container"><span class="title">Card names</span><input id="names" class="input-text" value="${this.cards.map(e=>e.name).join(",")}"></div>\n                    <div id="button-container">\n                        <button id="reset">RESET</button>\n                        <button id="save">SAVE</button>\n                    </div>\n                </div>`,fog.addEventListener("click",()=>fog.remove()),fog.querySelector("div").addEventListener("click",e=>e.stopPropagation()),fog.querySelector("#reset").addEventListener("click",()=>{cookies.delete("gas-cards"),window.location.reload()}),fog.querySelector("#save").addEventListener("click",()=>{const blocks=fog.querySelector("#blocks").value,percentile=fog.querySelector("#percentile").value,accept=fog.querySelector("#accept").value.split(","),names=fog.querySelector("#names").value.split(",");parseInt(blocks)&&(this.blocks=parseInt(blocks)),parseFloat(percentile)&&parseFloat(percentile)>=.01&&(this.percentile=parseFloat(percentile)),accept.length&&(this.cards=accept.map((e,i)=>({name:names[i],accept:parseInt(e)}))),this.setCookie(),window.location.reload()}),document.body.appendChild(fog),fadeIn(fog,500)})})},loadCookie:function(){if(cookies.get("gas-cards")){let cardCookie=null;try{cardCookie=JSON.parse(cookies.get("gas-cards"))}catch(error){console.log(error),cookies.delete("gas-cards")}if(cardCookie.blocks){const blocks=Math.min(Math.max(1,cardCookie.blocks),1e3);blocks&&(this.blocks=blocks)}if(cardCookie.percentile){const percentile=parseFloat(cardCookie.percentile);percentile&&percentile>=.01&&(this.percentile=percentile)}cardCookie.cards&&(this.cards=cardCookie.cards.filter(e=>parseInt(e.accept)&&parseInt(e.accept)>=0&&parseInt(e.accept)<=100))}},setCookie:function(){const data={cards:this.cards};this.blocks&&(data.blocks=this.blocks),this.percentile&&(data.percentile=this.percentile),cookies.set("gas-cards",JSON.stringify(data),{expires:{days:365}})},countDown:function(){setTimeout(()=>{this.counter--,this.element.forEach(e=>e.style.width=`${this.counter/(this.interval/this.toInterval)*100}%`),this.counter<=0?(this.counter=this.interval/this.toInterval,this.update().then(()=>this.countDown())):this.stop||this.countDown()},this.toInterval)},update:async function(){let query={grc:await recaptcha.getToken(),sid:await session.get(),accept:this.cards.map(e=>e.accept).join(",")};this.blocks&&(query.blocks=this.blocks),this.percentile&&(query.percentile=this.percentile),query=new URLSearchParams(query).toString();const data=await(await fetch(`/${network.symbol}/gas?${query}`)).json();if(data.error){if(console.log(data),401==data.status){this.stop=!0;const fog=document.createElement("div");fog.id="fog",fog.innerHTML='<div id="api-window" class="modal"><div id="content">\n                    <h2>Session expired</h2>\n                    <p>This page must be reloaded to keep showing updated gas fees</p>\n                    <div id="button-container">\n                        <button id="reload">Reload</button>\n                        <button id="cancel">Cancel</button>\n                    </div>\n                </div></div>',document.body.appendChild(fog),fog.addEventListener("click",()=>fog.remove()),fog.querySelector("#api-window").addEventListener("click",e=>e.preventDefault()),fog.querySelector("#cancel").addEventListener("click",()=>fog.remove()),fog.querySelector("#reload").addEventListener("click",()=>window.location.reload())}}else this.onUpdate(data);return data},addBaseFeeInfo:function(){if(!document.querySelector("#gas-container .gas .body .eip")){document.querySelectorAll("#gas-container .gas .body").forEach(e=>e.insertAdjacentHTML("beforeend",'<div class="eip"></div>'));const faqList=faq.getList();faqList.unshift(["What is the Base fee value I see in the gas cards?",'Base fee is a value determined by the network itself. It is the lower value you should pay to have your transaction mined. It changes form time to time, and Owlracle outputs the average value of the last blocks. This value is burned. Max fee = Base fee + Priority fee. Check <a href="https://notes.ethereum.org/@vbuterin/eip-1559-faq" target="_blank" rel="noopener nofollow">EIP-1559</a> for more info.'],["What is the priority fee?",'These are the values you should pay to incentivize miners to process your transactions. The higher the value, faster they will be mined. Higher values means more costly transactions though. That is where Owlracle can help you giving accurate estimates so you can pay no more than what is needed. Max fee = Base fee + Priority fee. Check <a href="https://notes.ethereum.org/@vbuterin/eip-1559-faq" target="_blank" rel="noopener nofollow">EIP-1559</a> for more info.'],['What is the "Max fee" value I see on my metamask wallet?','Max fee = Base fee + Priority fee. Check <a href="https://notes.ethereum.org/@vbuterin/eip-1559-faq" target="_blank" rel="noopener nofollow">EIP-1559</a> for more info.']),faq.setList(faqList)}}};function setColorGradient(elem,time){const maxTime=300,rate=Math.min(time,300)/300,color={b:"00",toString:color=>"00".slice(color.toString(16).length)+color.toString(16)};color.r=color.toString(Math.round(200*rate)),color.g=color.toString(Math.round(200*(1-rate))),elem.style["background-color"]=`#${color.r}${color.g}${color.b}`,new Tooltip(elem,`RPC last update was ${time}s ago`,{createEvent:"mouseenter"})}gasTimer.init(3e4,100),gasTimer.onUpdate=function(data){window.gasPrice=data;let gas=data.speeds.map(s=>network.nonevm?s.fee:s.gasPrice),baseFee=0;data.baseFee&&(this.addBaseFeeInfo(),baseFee=data.baseFee.toFixed(data.baseFee==parseInt(data.baseFee)?0:2),document.querySelectorAll("#gas-container .gas .eip").forEach((e,i)=>{e.innerHTML=`\n                <span class="value"><span class="text">Base:</span> ${baseFee} ${network.nonevm?network.unit:"GWei"}</span>\n                <span class="value"><span class="text">Tip:</span> ${Math.max(0,gas[i]-baseFee).toFixed(2)} ${network.nonevm?network.unit:"GWei"}</span>\n            `})),gas=gas.map(s=>s.toFixed(s==parseInt(s)?0:2));const fee=data.speeds.map(s=>network.nonevm?s.feeUSD.toFixed(4):s.estimatedFee.toFixed(4));document.querySelectorAll("#gas-container .gas .body").forEach((e,i)=>{data.speeds&&(e.querySelector(".gwei").innerHTML=`${gas[i]} ${network.nonevm?network.unit:"GWei"}`,e.querySelector(".usd").innerHTML=`$ ${fee[i]}`)}),(async()=>{const data=await(await fetch(`/rpc/${network.symbol}`)).json(),now=parseInt((new Date).getTime()/1e3);setColorGradient(document.querySelector("#time-sign"),now-data.lastTime)})(),this.started||(document.querySelector(`#timeframe-switcher #tf-${chart.timeframe}`).click(),document.querySelector("#toggle-container #gas").click(),this.started=!0),setTimeout(()=>document.title=`${gas.map(e=>parseInt(e)).join(", ")} ${network.nonevm?network.unit:"GWei"} 🦉 ${network.token} Gas tracker 🦉 Owlracle`,5e3)},new Tooltip(document.querySelector("#theme"),"Toggle light/dark mode",{delay:1e3,createEvent:"mouseenter"});const faq={list:[["What is Owlracle?",'Owlracle is an open-source gas oracle running predictions for multiple blockchain networks. We provide a website and an API for retrieving Owlracle\'s information, giving dapp developers easy access to gas information. Check our <a href="https://t.co/dNa1H1g9iA" target="_blank" rel="noopener">Medium article</a> explaining that in details.'],["How do you make the gas predictions?",'This tool attempts to predict the gas to be paid on multiple chains by averaging recent past transactions. For each block, we take the mined transaction with the lower gas. Every speed is measured by calculating the minimum gas paid to be accepted on a given percentage of past blocks. Take into consideration that the numbers shown are just estimations. Check our <a href="https://t.co/dNa1H1g9iA" target="_blank" rel="noopener">Medium article</a> explaining that in details.'],["How do you predict the gas fee?","We scan the last N (default 200) blocks and check the minimum gas accepted on a transaction for each block. Then we calculate how much gas you should pay to be accepted on X% (varying by speed) of these blocks."],["I like your service. When will you come to my favorite network?",'We are constantly evaluating the benefits of adding new networks to our oracle. In general, we try to priorize networks with a good amount of monthly transactions and/or trending ones. If you feel we are missing a promising network, feel free to <a href="/discord-feature" target="_blank" rel="noopener">contact us</a> and share your opinion.'],["I like your website, but I wish there was a more convenient tool. Like a browser extension.",'Weel, there is! You can go to Chrome Web Store and download our <a href="/extension" target="_blank" rel="noopener">extension</a>. It is super easy, one click and you get gas/history from your favorite network.'],["I would love to get Owlracle's predictions on my community group. Do you have anything for that?",'Sure we do! You can integrate our <a href="/telegrambot" target="_blank" rel="noopener">Telegram bot</a> or <a href="discordbot" target="_blank" rel="noopener">Discord bot</a> bots directly into your groups, so your people can easily get Owlracle\'s predictions.'],["I saw tweets from Owlracle about gas. How can I get it to send me gas for my favorite network?",'You just have to make a tweet mentioning <a href="https://twitter.com/owlracleapi" target="_blank" rel="noopener">@owlracleapi</a>, use the hashtag #gas and the name/token of your favorite network. e.g. polygon, ftm, bsc, etc.'],["My app have thousands of users making requests to your API. The API limit seems too low.","You should never call our API from the frond-end. Schedule your server to retrieve information at time intervals of your choice, then when your users request it, just send the cached data to them."],["Shouldn't I be worried if users peek into my app's source-code and discover my API key?","Do not EVER expose your API key on the front-end. If you do so, users will be able to read your source-code then make calls using your API (thus expending all your credits). Retrieve our data from your server back-end, then provide the cached data to your users when they request it."],["My API key have been exposed. What should I do?",'You can reset your API key hash and generate a new one <a id="link-info-key">clicking here</a>.'],["I am reaching API rate limit. How can I make a recharge and keep using Owlracle?",'On the header there is a place where you can <a id="link-info-key">login</a> with your API key. After the login, you can click on <i>Recharge key</i> option. From there you will be asked to connect your Metamask wallet. Then you can transfer any amount of tokens to recharge your key.'],["I need to retrieve gas info for several chains. Do I need to make a recharge on every network?","No! Once you recharge your key, the current token price is converted to USD and stored on your API key account as credit. Every time you request our endpoints (past the free limit) credit is subtracted from your API credit, regardless of which tokens were used when recharging the key. The current token price does not matter either, as they are converted to USD at the time of the recharge."]],getList:function(){return this.list},setList:function(list){this.list=list,this.rebuild()},rebuild:function(){document.querySelector("#faq").innerHTML=`<ul>${this.list.map(e=>`<li><ul><li class="question"><i class="fas fa-angle-right"></i>${e[0]}</li><li class="answer">${e[1]}</li></ul></li>`).join("")}</ul>`,document.querySelectorAll("#faq .question").forEach(e=>e.addEventListener("click",()=>e.parentNode.classList.toggle("open"))),document.querySelectorAll("#link-info-key").forEach(e=>e.addEventListener("click",()=>api.showProfile("info"))),document.querySelectorAll("#faq .token-name").forEach(e=>e.innerHTML=network.token),document.querySelectorAll('a[href^="#"]').forEach(anchor=>{anchor.addEventListener("click",(function(e){e.preventDefault(),document.querySelector(this.getAttribute("href")).scrollIntoView({behavior:"smooth"})}))})}};faq.rebuild(),(async()=>{if(cookies.get("pending-tx-recharge")){const toastAccept=new Toast('<i class="fas fa-spin fa-cog"></i><span> You have a pending recharge... I will check this for you... 🦉</span>',{timeOut:0,position:"center"});await new Promise(resolve=>new DynamicScript("https://cdnjs.cloudflare.com/ajax/libs/web3/1.7.1/web3.min.js",()=>resolve(!0)));const web3=(await import("./web3.min.js")).default;await web3.init();const{hash:hash,apikey:apikey}=cookies.get("pending-tx-recharge",!0),confirm=await web3.waitConfirmation(hash);if(toastAccept.fade(0),cookies.delete("pending-tx-recharge"),confirm.error)return void new Toast('Sorry! I could not verify your recharge. Go to our <a href="/discord-support" target="_blank" aria-label="discord server" rel="noopener">Discord server</a> and inform the tx hash so I can make things right for you.',{timeOut:1e4,position:"center"});new Toast(`Transaction found. <a href="${Network.get().explorer.href}/tx/${hash}" target="_blank" aria-label="view transaction" rel="noopener">View in explorer</a>.`,{timeOut:15e3,position:"center"});let toastUpdate=new Toast('<i class="fas fa-spin fa-cog"></i><span> Updating your API credit...</span>',{timeOut:0,position:"center"});const data=await api.updateCredit({apiKey:apikey,transactionHash:hash});if(toastUpdate.fade(1e3),200==data.status){let bonus="";return data.bonus&&(bonus=` (<span class="green">+$${parseFloat(data.bonus).toFixed(4)}</span> bonus)`),void new Toast(`🦉 Your API credit was increased by <span class="green">$${parseFloat(data.amount.usd).toFixed(4)}</span>${bonus}. Thanks!`,{timeOut:1e4,position:"center"})}new Toast('🦉 Something want wrong while updating your credit. Please go to our <a href="/discord-support" target="_blank" aria-label="discord server" rel="noopener">Discord server</a> and inform us about this issue.',{timeOut:1e4,position:"center"})}else;})();const blocksAnim={chains:["avax","poly","eth","ftm","bsc"],start:function(container){this.container=container,this.container.innerHTML='\n            <div id="block-belt"><i class="fa-solid fa-cube"></i></div>\n            <div id="tx-belt">\n                <div class="belt"></div>\n                <div class="belt"></div>\n                <div class="belt"></div>\n                <div class="belt"></div>\n                <div class="belt"></div>\n            </div>\n            <div id="request-belt"><i class="fa-solid fa-globe"></i></div>\n        ',setInterval(()=>this.container.querySelectorAll("#request-belt i, #block-belt i").forEach(e=>e.classList.toggle("glow")),1500);const blockBeltLimit=20;for(let j=0;j<20;j++)for(let i=0;i<this.chains.length;i++)new this.BlockTx(this,i,20);this.blockChainGenerator.start(this),this.requestGenerator.start(this)},blockChainGenerator:{blocks:[],start:function(parent){parent&&(this.parent=parent),this.running||this.run(),this.running=!0},stop:function(){this.running=!1},run:function(){const spawnTimeMin=500,spawnTimeMax=1e3,randomSpawnTime=parseInt(500*Math.random())+500;setTimeout(()=>{const chainId=Math.floor(Math.random()*this.parent.chains.length);if(this.blocks[chainId]){const dead=this.blocks[chainId].find(e=>!e.alive);dead?dead.run():this.blocks[chainId].push(new this.parent.BlockChain(this.parent,chainId))}else this.blocks[chainId]=[new this.parent.BlockChain(this.parent,chainId)];this.running&&this.run()},randomSpawnTime)}},requestGenerator:{list:[],start:function(parent){parent&&(this.parent=parent),this.running||this.run(),this.running=!0},stop:function(){this.running=!1},run:function(){const requestSpawnIntervalMin=500,requestSpawnIntervalMax=2e3,spawnInterval=parseInt(1500*Math.random())+500;setTimeout(()=>{const chainId=Math.floor(Math.random()*this.parent.chains.length);if(this.list[chainId]){const dead=this.list[chainId].find(e=>!e.request.alive);dead?(dead.request.run(),dead.response.run()):this.list[chainId].push({request:new this.parent.Request(this.parent,chainId),response:new this.parent.Response(this.parent,chainId)})}else this.list[chainId]=[{request:new this.parent.Request(this.parent,chainId),response:new this.parent.Response(this.parent,chainId)}];this.running&&this.run()},spawnInterval)}},BlockChain:class{constructor(parent,chainId=!1){this.parent=parent;const container=parent.container,chains=parent.chains;this.timeAlive=1500;const block=document.createElement("div");this.element=block,!1===chainId&&(chainId=Math.floor(Math.random()*chains.length)),this.chain=chainId;const img=document.createElement("img");img.src=`img/${chains[chainId]}.png`,block.classList.add("block",chains[chainId]),block.appendChild(img),container.querySelector("#block-belt").insertAdjacentElement("afterbegin",block);const targetMargin=chainId*(350/chains.length)-140;return block.style.setProperty("--left-pos",`${targetMargin}px`),this.run(),this}run(){this.element.classList.remove("hidden"),this.alive=!0,setTimeout(()=>{new this.parent.BlockTx(this.parent,this.chain),this.kill()},this.timeAlive)}kill(){this.element.classList.add("hidden"),this.alive=!1}},BlockTx:class{constructor(parent,id,limit=20){const chains=parent.chains,container=parent.container,block=document.createElement("div");block.classList.add("block",chains[id]);const randomWidth=Math.floor(70*Math.random()+30);block.style.setProperty("--left-pos",`${randomWidth}%`);const belt=container.querySelectorAll("#tx-belt .belt")[id];belt.insertAdjacentElement("afterbegin",block),belt.querySelectorAll(".block").length>=limit&&Array.from(belt.querySelectorAll(".block")).slice(-1)[0].remove()}},Request:class{constructor(parent,chosenChain=!1){const chains=parent.chains,container=parent.container;this.parent=parent,!1===chosenChain&&(chosenChain=Math.floor(Math.random()*chains.length)),this.chain=chosenChain;const req=document.createElement("div"),inner=document.createElement("span");inner.innerHTML="{⋯}",req.classList.add("block",chains[chosenChain]),this.element=req,req.appendChild(inner),container.querySelector("#request-belt").insertAdjacentElement("afterbegin",req);const targetMargin=chosenChain*(350/chains.length)-140;req.style.setProperty("--left-pos",`${targetMargin}px`),this.timeAlive=5e3,this.run()}run(){this.element.classList.remove("hidden"),this.alive=!0,setTimeout(()=>this.kill(),this.timeAlive)}kill(){this.element.classList.add("hidden"),this.alive=!1}},Response:class{static template;constructor(parent,chainId){const chains=parent.chains,container=parent.container,res=document.createElement("div");res.classList.add("response",chains[chainId]);const targetMargin=chainId*(350/chains.length);return res.style.setProperty("--left-pos",`${targetMargin}px`),this.element=res,Response.template?res.innerHTML=`<pre><code>${JSON.stringify(Response.template,null,2)}</code></pre>`:fetch("/eth/gas?apikey=YOUR_API_KEY").then(res=>res.json().then(data=>{Response.template=data,this.element.innerHTML=`<pre><code>${JSON.stringify(Response.template,null,2)}</code></pre>`})),container.insertAdjacentElement("beforeend",res),this.run(),this}run(){this.element.classList.remove("hidden"),this.alive=!0,setTimeout(()=>this.kill(),3500)}kill(){this.element.classList.add("hidden"),this.alive=!1}}};blocksAnim.start(document.querySelector("#block-anim"));const carousel={init:function(container,opt={}){var images;this.container=container,this.images=(images=opt.images)&&images.length?images.map(e=>{const element=document.createElement("img");return element.src=e,element}):[],this.index=3,this.render(),container.querySelectorAll("#bullet-container .bullet")[this.index].classList.add("active"),container.querySelector("#slide .left").addEventListener("click",()=>this.slide("left")),container.querySelector("#slide .right").addEventListener("click",()=>this.slide("right")),container.querySelectorAll("#bullet-container .bullet").forEach((e,i)=>e.addEventListener("click",()=>this.slide(i))),this.renewInterval()},render:function(){this.container.querySelectorAll(".item img").forEach((e,i)=>{e.src=this.images[(this.index+i)%this.images.length].src})},renewInterval:function(newInt=5e3){this.interval&&clearInterval(this.interval),this.interval=setInterval(()=>this.slide("right"),newInt)},slide:function(pos="right"){if(this.sliding)return;this.sliding=!0;const relativePos="right"==pos||"left"==pos?pos:pos>this.index?"right":pos<this.index&&"left";if(!relativePos)return;const allItems=this.container.querySelectorAll(".item");allItems.forEach(e=>e.classList.add(`slide-${relativePos}`)),this.container.querySelectorAll("#bullet-container .bullet")[this.index].classList.remove("active"),"left"==relativePos?this.index=this.index<=0?this.images.length-1:this.index-1:"right"==relativePos&&(this.index=this.index>=this.images.length-1?0:this.index+1),this.container.querySelectorAll("#bullet-container .bullet")[this.index].classList.add("active"),this.renewInterval(1e4),setTimeout(()=>allItems.forEach(e=>{this.render(),e.classList.remove(`slide-${relativePos}`),this.sliding=!1}),1e3)}};carousel.init(document.querySelector("#carousel-container"),{images:Array(5).fill(0).map((_,i)=>`img/carousel-extension-${i}.png`)});const brandCarousel={auto:!0,init:function(container){this.container=container,this.brands=container.querySelector("#brands-container"),this.boxes=container.querySelector("#box-container"),this.boxes.querySelectorAll(".box").forEach((e,i)=>e.style.setProperty("--left-pos",`${50*i-50}%`)),this.brands.querySelectorAll(".brand").forEach((e,i)=>e.addEventListener("click",()=>{this.auto=!1,this.switch(i)})),this.switch(0)},switch:function(index){this.index=void 0===index?(this.index+1)%3:index,this.brands.querySelectorAll(".brand").forEach(e=>e.classList.remove("active")),this.brands.querySelectorAll(".brand")[this.index].classList.add("active"),this.boxes.querySelectorAll(".box").forEach(e=>e.classList.remove("active")),this.boxes.querySelectorAll(".box")[this.index].classList.add("active"),setTimeout(()=>{this.auto&&this.switch()},1e4)}};brandCarousel.init(document.querySelector("#section-5"));
//# sourceMappingURL=index.min.js.map