import{network}from"./utils.min.js";const container=document.querySelector("#card-container");Object.values(network.getList()).filter(e=>!e.disabled).forEach(e=>{container.insertAdjacentHTML("beforeend",`<a class="item" href="/${e.symbol}">\n        <div class="time-sign"></div>\n        <div class="col">\n            <div class="row title">\n                <img class="icon" src="img/${e.symbol}.png">\n                <span class="name">${e.name}</span>\n            </div>\n            <span class="row rpc">RPC: <span class="placeholder"></span></span>\n            <span class="row time">Last Update: <span class="placeholder"></span></span>\n        </div>\n    </a>`)});const refresh=async()=>{const data=await(await fetch("/rpc")).json(),now=parseInt((new Date).getTime()/1e3),maxTime=300;Object.values(network.getList()).filter(e=>!e.disabled).forEach((e,i)=>{const dataNet=data.find(d=>d.network==e.symbol),timeDiff=now-(dataNet.lastTime||0);container.querySelectorAll(".item .row.rpc")[i].innerHTML=dataNet.rpc?`RPC: <span class="grey">${dataNet.rpc}</span>`:'<span class="grey">No info about RPC</span>',container.querySelectorAll(".item .row.time")[i].innerHTML=dataNet.lastTime?`Last Update: <span class="grey">${timeDiff}s ago</span>`:'<span class="grey">No info about last update</span>';const timeSign=container.querySelectorAll(".time-sign")[i],rate=Math.min(timeDiff,300)/300,color={b:"00",toString:color=>"00".slice(color.toString(16).length)+color.toString(16)};color.r=color.toString(Math.round(200*rate)),color.g=color.toString(Math.round(200*(1-rate))),timeSign.style["background-color"]=`#${color.r}${color.g}${color.b}`})};refresh(),setInterval(refresh,5e3);
//# sourceMappingURL=status.min.js.map